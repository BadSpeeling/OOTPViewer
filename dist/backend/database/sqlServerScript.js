"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pitchingDataScript = exports.battingDataScript = void 0;
exports.battingDataScript = "\ndeclare @LiveUpdateID int;\n\nselect top 1 @LiveUpdateID = LiveUpdateID from dbo.LiveUpdate order by EffectiveDate desc\n\nselect [stats].CardID,\n[stats].TournamentTypeID,\nLiveUpdateID,\nPA,\ncase when AB != 0 then ([1b]+[2b]+[3b]+[hr])/convert(decimal,AB) else 0.000 end as [AVG], \ncase when PA != 0 then (([1b]+[2b]+[3b]+[hr])+BB+IBB+HP)/CONVERT(DECIMAL,PA) else 0.000 end OBP, \ncase when AB != 0 then ([1B]+2*[2B]+3*[3B]+4*HR)/CONVERT(DECIMAL,AB) else 0.000 end SLG\ninto #Hitters\nfrom (\n\tselect case when cards.CardType = 1 then sb.LiveUpdateID else 0 end LiveUpdateID,sb.TournamentTypeID,cards.CardID,SUM(G) G,SUM(GS) GS,SUM(PA) PA,SUM(AB) AB,SUM([1b]) [1B],SUM([2b]) [2B],SUM([3b]) [3B],SUM([hr]) [HR],SUM(RBI) RBI,SUM(R) R,SUM(BB) BB,SUM(IBB) IBB,SUM(HP) HP,SUM(SH) SH,SUM(SF) SF,SUM(SO) SO \n\tfrom BattingStats\n\tjoin Card cards on cards.CardID = BattingStats.CardID\n\tjoin StatsBatch sb on BattingStats.StatsBatchID = sb.StatsBatchID\n\tjoin TournamentType [type] on sb.TournamentTypeID = [type].TournamentTypeID\n\twhere 1=1\n\tand (cards.CardType != 1 or @LiveUpdateID = sb.LiveUpdateID)\n\tand [type].[TournamentTypeID] = {{tournamentTypeID}}\n\tand G > 0 \n\tgroup by cards.CardType,sb.LiveUpdateID,cards.CardID,sb.TournamentTypeID\n) [stats]\nwhere PA > {{qualifierValue}}\n\nselect CardTitle,[type].[Name],[stats].CardID,CardValue,dbo.GetPositionStr(Position) POS, case when cards.Bats = 1 then 'R' else 'L' end [Bats], [stats].PA,\nSUBSTRING(CONVERT(VARCHAR, ROUND([AVG],3)),2,4) as [AVG], \nSUBSTRING(CONVERT(VARCHAR, ROUND([OBP],3)),2,4) as [OBP],  \nSUBSTRING(CONVERT(VARCHAR, ROUND([SLG],3)),2,4) as [SLG],\nCONCAT(CASE WHEN CONVERT(INT,(SUBSTRING(CONVERT(VARCHAR,[OBP]+[SLG]),1,1))) > 0 THEN SUBSTRING(CONVERT(VARCHAR,[OBP]+[SLG]),1,1) ELSE '' END, SUBSTRING(CONVERT(VARCHAR, ROUND([OBP]+[SLG],3)),2,4)) as [OPS],\ncards.InfieldRange,cards.InfieldError, cards.InfieldArm,\ncards.OFRange,cards.OFError, cards.OFArm,\ncards.CatcherAbil, cards.CatcherArm, cards.CatcherFrame\nfrom #Hitters [stats]\njoin dbo.Card cards on [stats].CardID = cards.CardID and isnull([stats].LiveUpdateID,0) = isnull(cards.LiveUpdateID,0)\njoin TournamentType [type] on [stats].TournamentTypeID = [type].TournamentTypeID\nwhere 1=1\norder by \n[stats].PA desc\n";
exports.pitchingDataScript = "\ndeclare @LiveUpdateID int;\n\nselect top 1 @LiveUpdateID = LiveUpdateID from dbo.LiveUpdate order by EffectiveDate desc\n\nselect [stats].CardID,\n[stats].TournamentTypeID,\nLiveUpdateID,\nG,\nGS,\n(K / (OUTS / 3.0) ) * 9 as [K/9],\n((BB+IBB) / (OUTS / 3.0) ) * 9 as [BB/9],\n(HR / (OUTS / 3.0) ) * 9 as [HR/9],\n(ER / (OUTS / 3.0)) * 9 as [ERA]\ninto #current_pitchers\nfrom\n(\n\tselect case when cards.CardType = 1 then sb.LiveUpdateID else 0 end LiveUpdateID,cards.CardID,sb.TournamentTypeID,sum(G) G, sum(GS) GS, sum(OUTS) OUTS, sum(BB) BB, sum(IBB) IBB, sum(K) K, sum(HR) HR, sum(ER) ER\n\tfrom PitchingStats\n\tjoin Card cards on cards.CardID = PitchingStats.CardID\n\tjoin StatsBatch sb on PitchingStats.StatsBatchID = sb.StatsBatchID\n\tjoin TournamentType [type] on sb.TournamentTypeID = [type].TournamentTypeID\n\twhere 1=1\n\tand (cards.CardType != 1 or @LiveUpdateID = sb.LiveUpdateID)\n\tand OUTS > 0\n\tand [type].[TournamentTypeID] = {{tournamentTypeID}}\n\tgroup by cards.CardType,sb.LiveUpdateID,cards.CardID,sb.TournamentTypeID\n) [stats]\nwhere G > {{qualifierValue}}\n\norder by ERA asc\n\nselect\nCardTitle,[type].Name,CardValue, dbo.GetPositionStr(Position) [POS], case when Throws = 1 then 'R' else 'L' end [Throws],\nG,\nGS,\ncase when CHARINDEX('.',CONVERT(VARCHAR,[K/9])) = 2 THEN SUBSTRING(CONVERT(VARCHAR, ROUND([K/9],3)),1,4) ELSE SUBSTRING(CONVERT(VARCHAR, ROUND([K/9],3)),1,5) END as [K/9], \nSUBSTRING(CONVERT(VARCHAR, ROUND([BB/9],3)),1,4) as [BB/9],  \nSUBSTRING(CONVERT(VARCHAR, ROUND([HR/9],3)),1,4) as [HR/9],\nSUBSTRING(CONVERT(VARCHAR, ROUND([stats].[ERA],3)),1,4) as [ERA],\ncards.[Stuff],cards.[pHR],cards.[pBABIP],cards.[Control],cards.[Stamina]\nfrom #current_pitchers [stats]\njoin dbo.Card cards on [stats].CardID = cards.CardID and isnull([stats].LiveUpdateID,0) = isnull(cards.LiveUpdateID,0)\njoin TournamentType [type] on [stats].TournamentTypeID = [type].TournamentTypeID\nwhere 1=1\norder by \n[stats].G desc\n";
//# sourceMappingURL=sqlServerScript.js.map